# -*- coding: utf-8 -*-
# Generated by Django 1.10.2 on 2016-10-26 15:06
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_passive', models.NullBooleanField()),
                ('is_deleted', models.NullBooleanField()),
                ('create_ts', models.DateTimeField(null=True)),
                ('update_ts', models.DateTimeField(null=True)),
                ('delete_ts', models.DateTimeField(null=True)),
                ('maked_passive_ts', models.DateTimeField(null=True)),
                ('maked_active_ts', models.DateTimeField(null=True)),
                ('name', models.CharField(max_length=20)),
                ('value', models.TextField(null=True)),
                ('isDefault', models.NullBooleanField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AddressType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_passive', models.NullBooleanField()),
                ('is_deleted', models.NullBooleanField()),
                ('create_ts', models.DateTimeField(null=True)),
                ('update_ts', models.DateTimeField(null=True)),
                ('delete_ts', models.DateTimeField(null=True)),
                ('maked_passive_ts', models.DateTimeField(null=True)),
                ('maked_active_ts', models.DateTimeField(null=True)),
                ('name', models.CharField(max_length=16, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Article',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_passive', models.NullBooleanField()),
                ('is_deleted', models.NullBooleanField()),
                ('create_ts', models.DateTimeField(null=True)),
                ('update_ts', models.DateTimeField(null=True)),
                ('delete_ts', models.DateTimeField(null=True)),
                ('maked_passive_ts', models.DateTimeField(null=True)),
                ('maked_active_ts', models.DateTimeField(null=True)),
                ('is_inter_public', models.NullBooleanField()),
                ('is_intra_public', models.NullBooleanField()),
                ('is_private', models.NullBooleanField()),
                ('is_expire', models.NullBooleanField()),
                ('expire_time', models.DateTimeField(null=True)),
                ('is_published', models.NullBooleanField()),
                ('publish_time', models.DateTimeField(null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ArticleComment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_passive', models.NullBooleanField()),
                ('is_deleted', models.NullBooleanField()),
                ('create_ts', models.DateTimeField(null=True)),
                ('update_ts', models.DateTimeField(null=True)),
                ('delete_ts', models.DateTimeField(null=True)),
                ('maked_passive_ts', models.DateTimeField(null=True)),
                ('maked_active_ts', models.DateTimeField(null=True)),
                ('comment', models.TextField(null=True)),
                ('article', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Article')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ArticleLike',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_passive', models.NullBooleanField()),
                ('is_deleted', models.NullBooleanField()),
                ('create_ts', models.DateTimeField(null=True)),
                ('update_ts', models.DateTimeField(null=True)),
                ('delete_ts', models.DateTimeField(null=True)),
                ('maked_passive_ts', models.DateTimeField(null=True)),
                ('maked_active_ts', models.DateTimeField(null=True)),
                ('like', models.NullBooleanField()),
                ('article', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Article')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ArticleStar',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_passive', models.NullBooleanField()),
                ('is_deleted', models.NullBooleanField()),
                ('create_ts', models.DateTimeField(null=True)),
                ('update_ts', models.DateTimeField(null=True)),
                ('delete_ts', models.DateTimeField(null=True)),
                ('maked_passive_ts', models.DateTimeField(null=True)),
                ('maked_active_ts', models.DateTimeField(null=True)),
                ('star', models.IntegerField(null=True)),
                ('article', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Article')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ArticleUnLike',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_passive', models.NullBooleanField()),
                ('is_deleted', models.NullBooleanField()),
                ('create_ts', models.DateTimeField(null=True)),
                ('update_ts', models.DateTimeField(null=True)),
                ('delete_ts', models.DateTimeField(null=True)),
                ('maked_passive_ts', models.DateTimeField(null=True)),
                ('maked_active_ts', models.DateTimeField(null=True)),
                ('un_like', models.NullBooleanField()),
                ('article', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Article')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='BE_Lesson',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_passive', models.NullBooleanField()),
                ('is_deleted', models.NullBooleanField()),
                ('create_ts', models.DateTimeField(null=True)),
                ('update_ts', models.DateTimeField(null=True)),
                ('delete_ts', models.DateTimeField(null=True)),
                ('maked_passive_ts', models.DateTimeField(null=True)),
                ('maked_active_ts', models.DateTimeField(null=True)),
                ('total_questions', models.IntegerField(null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='BE_SubExam',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_passive', models.NullBooleanField()),
                ('is_deleted', models.NullBooleanField()),
                ('create_ts', models.DateTimeField(null=True)),
                ('update_ts', models.DateTimeField(null=True)),
                ('delete_ts', models.DateTimeField(null=True)),
                ('maked_passive_ts', models.DateTimeField(null=True)),
                ('maked_active_ts', models.DateTimeField(null=True)),
                ('begin', models.DateTimeField(null=True)),
                ('end', models.DateTimeField(null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='BESE_Lesson',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_passive', models.NullBooleanField()),
                ('is_deleted', models.NullBooleanField()),
                ('create_ts', models.DateTimeField(null=True)),
                ('update_ts', models.DateTimeField(null=True)),
                ('delete_ts', models.DateTimeField(null=True)),
                ('maked_passive_ts', models.DateTimeField(null=True)),
                ('maked_active_ts', models.DateTimeField(null=True)),
                ('exam', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.BE_SubExam')),
                ('lesson', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.BE_Lesson')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='BigExam',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_passive', models.NullBooleanField()),
                ('is_deleted', models.NullBooleanField()),
                ('create_ts', models.DateTimeField(null=True)),
                ('update_ts', models.DateTimeField(null=True)),
                ('delete_ts', models.DateTimeField(null=True)),
                ('maked_passive_ts', models.DateTimeField(null=True)),
                ('maked_active_ts', models.DateTimeField(null=True)),
                ('begin', models.DateTimeField(null=True)),
                ('end', models.DateTimeField(null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='BigExamType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_passive', models.NullBooleanField()),
                ('is_deleted', models.NullBooleanField()),
                ('create_ts', models.DateTimeField(null=True)),
                ('update_ts', models.DateTimeField(null=True)),
                ('delete_ts', models.DateTimeField(null=True)),
                ('maked_passive_ts', models.DateTimeField(null=True)),
                ('maked_active_ts', models.DateTimeField(null=True)),
                ('name', models.CharField(max_length=55, null=True)),
                ('short_name', models.CharField(max_length=8, null=True)),
                ('have_sub_exams', models.NullBooleanField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_passive', models.NullBooleanField()),
                ('is_deleted', models.NullBooleanField()),
                ('create_ts', models.DateTimeField(null=True)),
                ('update_ts', models.DateTimeField(null=True)),
                ('delete_ts', models.DateTimeField(null=True)),
                ('maked_passive_ts', models.DateTimeField(null=True)),
                ('maked_active_ts', models.DateTimeField(null=True)),
                ('name', models.CharField(max_length=55, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Dealer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_passive', models.NullBooleanField()),
                ('is_deleted', models.NullBooleanField()),
                ('create_ts', models.DateTimeField(null=True)),
                ('update_ts', models.DateTimeField(null=True)),
                ('delete_ts', models.DateTimeField(null=True)),
                ('maked_passive_ts', models.DateTimeField(null=True)),
                ('maked_active_ts', models.DateTimeField(null=True)),
                ('name', models.CharField(max_length=25, null=True)),
                ('commission', models.FloatField(null=True)),
                ('commission_is_tax_included', models.NullBooleanField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='District',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_passive', models.NullBooleanField()),
                ('is_deleted', models.NullBooleanField()),
                ('create_ts', models.DateTimeField(null=True)),
                ('update_ts', models.DateTimeField(null=True)),
                ('delete_ts', models.DateTimeField(null=True)),
                ('maked_passive_ts', models.DateTimeField(null=True)),
                ('maked_active_ts', models.DateTimeField(null=True)),
                ('name', models.CharField(max_length=55, null=True)),
                ('city', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.City')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='EducationLevel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_passive', models.NullBooleanField()),
                ('is_deleted', models.NullBooleanField()),
                ('create_ts', models.DateTimeField(null=True)),
                ('update_ts', models.DateTimeField(null=True)),
                ('delete_ts', models.DateTimeField(null=True)),
                ('maked_passive_ts', models.DateTimeField(null=True)),
                ('maked_active_ts', models.DateTimeField(null=True)),
                ('name', models.CharField(max_length=25, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='EducationSection',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_passive', models.NullBooleanField()),
                ('is_deleted', models.NullBooleanField()),
                ('create_ts', models.DateTimeField(null=True)),
                ('update_ts', models.DateTimeField(null=True)),
                ('delete_ts', models.DateTimeField(null=True)),
                ('maked_passive_ts', models.DateTimeField(null=True)),
                ('maked_active_ts', models.DateTimeField(null=True)),
                ('name', models.CharField(max_length=25, null=True)),
                ('level', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.EducationLevel')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ExamInstitution',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_passive', models.NullBooleanField()),
                ('is_deleted', models.NullBooleanField()),
                ('create_ts', models.DateTimeField(null=True)),
                ('update_ts', models.DateTimeField(null=True)),
                ('delete_ts', models.DateTimeField(null=True)),
                ('maked_passive_ts', models.DateTimeField(null=True)),
                ('maked_active_ts', models.DateTimeField(null=True)),
                ('name', models.CharField(max_length=55, null=True)),
                ('short_name', models.CharField(max_length=8, null=True)),
                ('is_osym', models.NullBooleanField()),
                ('is_meb', models.NullBooleanField()),
                ('is_tubitak', models.NullBooleanField()),
                ('is_sat', models.NullBooleanField()),
                ('is_other', models.NullBooleanField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ExamType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_passive', models.NullBooleanField()),
                ('is_deleted', models.NullBooleanField()),
                ('create_ts', models.DateTimeField(null=True)),
                ('update_ts', models.DateTimeField(null=True)),
                ('delete_ts', models.DateTimeField(null=True)),
                ('maked_passive_ts', models.DateTimeField(null=True)),
                ('maked_active_ts', models.DateTimeField(null=True)),
                ('name', models.CharField(max_length=25, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='File',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_passive', models.NullBooleanField()),
                ('is_deleted', models.NullBooleanField()),
                ('create_ts', models.DateTimeField(null=True)),
                ('update_ts', models.DateTimeField(null=True)),
                ('delete_ts', models.DateTimeField(null=True)),
                ('maked_passive_ts', models.DateTimeField(null=True)),
                ('maked_active_ts', models.DateTimeField(null=True)),
                ('is_inter_public', models.NullBooleanField()),
                ('is_intra_public', models.NullBooleanField()),
                ('is_private', models.NullBooleanField()),
                ('is_expire', models.NullBooleanField()),
                ('expire_time', models.DateTimeField(null=True)),
                ('name', models.CharField(max_length=55, null=True)),
                ('path', models.FileField(null=True, upload_to='uploads/%Y/%m/%d/')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='HomeWork',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_passive', models.NullBooleanField()),
                ('is_deleted', models.NullBooleanField()),
                ('create_ts', models.DateTimeField(null=True)),
                ('update_ts', models.DateTimeField(null=True)),
                ('delete_ts', models.DateTimeField(null=True)),
                ('maked_passive_ts', models.DateTimeField(null=True)),
                ('maked_active_ts', models.DateTimeField(null=True)),
                ('dead_line', models.DateTimeField(null=True)),
                ('review_day', models.DateField(null=True)),
                ('comment', models.TextField(null=True)),
                ('is_finished_in_time', models.NullBooleanField()),
                ('is_finished_correctly', models.NullBooleanField()),
                ('review_point', models.IntegerField(null=True)),
                ('review_comment', models.TextField(null=True)),
                ('comment_for_parent', models.TextField(null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='HomeWorkFile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_passive', models.NullBooleanField()),
                ('is_deleted', models.NullBooleanField()),
                ('create_ts', models.DateTimeField(null=True)),
                ('update_ts', models.DateTimeField(null=True)),
                ('delete_ts', models.DateTimeField(null=True)),
                ('maked_passive_ts', models.DateTimeField(null=True)),
                ('maked_active_ts', models.DateTimeField(null=True)),
                ('file', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.File')),
                ('home_work', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.HomeWork')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='HomeWorkType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_passive', models.NullBooleanField()),
                ('is_deleted', models.NullBooleanField()),
                ('create_ts', models.DateTimeField(null=True)),
                ('update_ts', models.DateTimeField(null=True)),
                ('delete_ts', models.DateTimeField(null=True)),
                ('maked_passive_ts', models.DateTimeField(null=True)),
                ('maked_active_ts', models.DateTimeField(null=True)),
                ('name', models.CharField(max_length=25, null=True)),
                ('comment', models.TextField(null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Lecture',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_passive', models.NullBooleanField()),
                ('is_deleted', models.NullBooleanField()),
                ('create_ts', models.DateTimeField(null=True)),
                ('update_ts', models.DateTimeField(null=True)),
                ('delete_ts', models.DateTimeField(null=True)),
                ('maked_passive_ts', models.DateTimeField(null=True)),
                ('maked_active_ts', models.DateTimeField(null=True)),
                ('date', models.DateField(null=True)),
                ('begin_time', models.TimeField(null=True)),
                ('end_time', models.TimeField(null=True)),
                ('is_happened', models.NullBooleanField()),
                ('comment', models.TextField(null=True)),
                ('review_point', models.IntegerField(null=True)),
                ('review_comment', models.TextField(null=True)),
                ('comment_for_parent', models.TextField(null=True)),
                ('is_repetitive', models.NullBooleanField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='LectureRepetitive',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_passive', models.NullBooleanField()),
                ('is_deleted', models.NullBooleanField()),
                ('create_ts', models.DateTimeField(null=True)),
                ('update_ts', models.DateTimeField(null=True)),
                ('delete_ts', models.DateTimeField(null=True)),
                ('maked_passive_ts', models.DateTimeField(null=True)),
                ('maked_active_ts', models.DateTimeField(null=True)),
                ('from_date', models.DateField(null=True)),
                ('end_date', models.DateField(null=True)),
                ('day_of_week', models.IntegerField(null=True)),
                ('repeat_of_week', models.IntegerField(null=True)),
                ('begin_time', models.TimeField(null=True)),
                ('end_time', models.TimeField(null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Lesson',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_passive', models.NullBooleanField()),
                ('is_deleted', models.NullBooleanField()),
                ('create_ts', models.DateTimeField(null=True)),
                ('update_ts', models.DateTimeField(null=True)),
                ('delete_ts', models.DateTimeField(null=True)),
                ('maked_passive_ts', models.DateTimeField(null=True)),
                ('maked_active_ts', models.DateTimeField(null=True)),
                ('name', models.CharField(max_length=25, null=True)),
                ('level', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.EducationLevel')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_passive', models.NullBooleanField()),
                ('is_deleted', models.NullBooleanField()),
                ('create_ts', models.DateTimeField(null=True)),
                ('update_ts', models.DateTimeField(null=True)),
                ('delete_ts', models.DateTimeField(null=True)),
                ('maked_passive_ts', models.DateTimeField(null=True)),
                ('maked_active_ts', models.DateTimeField(null=True)),
                ('send_time', models.DateTimeField(null=True)),
                ('read_time', models.DateTimeField(null=True)),
                ('is_deleted_sender', models.NullBooleanField()),
                ('is_deleted_receiver', models.NullBooleanField()),
                ('is_read', models.NullBooleanField()),
                ('message', models.TextField(null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MessageAttachment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_passive', models.NullBooleanField()),
                ('is_deleted', models.NullBooleanField()),
                ('create_ts', models.DateTimeField(null=True)),
                ('update_ts', models.DateTimeField(null=True)),
                ('delete_ts', models.DateTimeField(null=True)),
                ('maked_passive_ts', models.DateTimeField(null=True)),
                ('maked_active_ts', models.DateTimeField(null=True)),
                ('file', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.File')),
                ('message', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Message')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ObjectEvent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_passive', models.NullBooleanField()),
                ('is_deleted', models.NullBooleanField()),
                ('create_ts', models.DateTimeField(null=True)),
                ('update_ts', models.DateTimeField(null=True)),
                ('delete_ts', models.DateTimeField(null=True)),
                ('maked_passive_ts', models.DateTimeField(null=True)),
                ('maked_active_ts', models.DateTimeField(null=True)),
                ('name', models.CharField(max_length=25, null=True)),
                ('is_create', models.NullBooleanField()),
                ('is_update', models.NullBooleanField()),
                ('is_soft_delete', models.NullBooleanField()),
                ('is_hard_delete', models.NullBooleanField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='OtherExam',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_passive', models.NullBooleanField()),
                ('is_deleted', models.NullBooleanField()),
                ('create_ts', models.DateTimeField(null=True)),
                ('update_ts', models.DateTimeField(null=True)),
                ('delete_ts', models.DateTimeField(null=True)),
                ('maked_passive_ts', models.DateTimeField(null=True)),
                ('maked_active_ts', models.DateTimeField(null=True)),
                ('total_questions', models.IntegerField(null=True)),
                ('correct_answers', models.IntegerField(null=True)),
                ('wrong_answers', models.IntegerField(null=True)),
                ('review_point', models.IntegerField(null=True)),
                ('student_comment', models.TextField(null=True)),
                ('date', models.DateField(null=True)),
                ('description', models.TextField(null=True)),
                ('lesson', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Lesson')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='OtomationFile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_passive', models.NullBooleanField()),
                ('is_deleted', models.NullBooleanField()),
                ('create_ts', models.DateTimeField(null=True)),
                ('update_ts', models.DateTimeField(null=True)),
                ('delete_ts', models.DateTimeField(null=True)),
                ('maked_passive_ts', models.DateTimeField(null=True)),
                ('maked_active_ts', models.DateTimeField(null=True)),
                ('file', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.File')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='OtomationFileType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_passive', models.NullBooleanField()),
                ('is_deleted', models.NullBooleanField()),
                ('create_ts', models.DateTimeField(null=True)),
                ('update_ts', models.DateTimeField(null=True)),
                ('delete_ts', models.DateTimeField(null=True)),
                ('maked_passive_ts', models.DateTimeField(null=True)),
                ('maked_active_ts', models.DateTimeField(null=True)),
                ('name', models.CharField(max_length=25, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Parent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_passive', models.NullBooleanField()),
                ('is_deleted', models.NullBooleanField()),
                ('create_ts', models.DateTimeField(null=True)),
                ('update_ts', models.DateTimeField(null=True)),
                ('delete_ts', models.DateTimeField(null=True)),
                ('maked_passive_ts', models.DateTimeField(null=True)),
                ('maked_active_ts', models.DateTimeField(null=True)),
                ('comment', models.TextField(null=True)),
                ('profession', models.TextField(max_length=25)),
                ('where_work', models.TextField(max_length=50)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ParentFile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_passive', models.NullBooleanField()),
                ('is_deleted', models.NullBooleanField()),
                ('create_ts', models.DateTimeField(null=True)),
                ('update_ts', models.DateTimeField(null=True)),
                ('delete_ts', models.DateTimeField(null=True)),
                ('maked_passive_ts', models.DateTimeField(null=True)),
                ('maked_active_ts', models.DateTimeField(null=True)),
                ('file', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.File')),
                ('parent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Parent')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ParentStudent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_passive', models.NullBooleanField()),
                ('is_deleted', models.NullBooleanField()),
                ('create_ts', models.DateTimeField(null=True)),
                ('update_ts', models.DateTimeField(null=True)),
                ('delete_ts', models.DateTimeField(null=True)),
                ('maked_passive_ts', models.DateTimeField(null=True)),
                ('maked_active_ts', models.DateTimeField(null=True)),
                ('comment', models.TextField(null=True)),
                ('parent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Parent')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ParentTeacherReview',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_passive', models.NullBooleanField()),
                ('is_deleted', models.NullBooleanField()),
                ('create_ts', models.DateTimeField(null=True)),
                ('update_ts', models.DateTimeField(null=True)),
                ('delete_ts', models.DateTimeField(null=True)),
                ('maked_passive_ts', models.DateTimeField(null=True)),
                ('maked_active_ts', models.DateTimeField(null=True)),
                ('stars', models.IntegerField(null=True)),
                ('comment', models.TextField(null=True)),
                ('parent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Parent')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ParentType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_passive', models.NullBooleanField()),
                ('is_deleted', models.NullBooleanField()),
                ('create_ts', models.DateTimeField(null=True)),
                ('update_ts', models.DateTimeField(null=True)),
                ('delete_ts', models.DateTimeField(null=True)),
                ('maked_passive_ts', models.DateTimeField(null=True)),
                ('maked_active_ts', models.DateTimeField(null=True)),
                ('name', models.CharField(max_length=25, null=True)),
                ('mother', models.NullBooleanField()),
                ('father', models.NullBooleanField()),
                ('step_mother', models.NullBooleanField()),
                ('step_father', models.NullBooleanField()),
                ('elder_sisters', models.NullBooleanField()),
                ('elder_brothers', models.NullBooleanField()),
                ('step_elder_sisters', models.NullBooleanField()),
                ('step_elder_brothers', models.NullBooleanField()),
                ('uncle_father', models.NullBooleanField()),
                ('uncle_mother', models.NullBooleanField()),
                ('aunt_father', models.NullBooleanField()),
                ('aunt_mother', models.NullBooleanField()),
                ('uncle_in_law', models.NullBooleanField()),
                ('aunt_in_law', models.NullBooleanField()),
                ('grandpa_father', models.NullBooleanField()),
                ('grandpa_mother', models.NullBooleanField()),
                ('grandma_father', models.NullBooleanField()),
                ('grandma_mother', models.NullBooleanField()),
                ('other_relative', models.NullBooleanField()),
                ('government', models.NullBooleanField()),
                ('institution', models.NullBooleanField()),
                ('school', models.NullBooleanField()),
                ('other', models.NullBooleanField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Payer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_passive', models.NullBooleanField()),
                ('is_deleted', models.NullBooleanField()),
                ('create_ts', models.DateTimeField(null=True)),
                ('update_ts', models.DateTimeField(null=True)),
                ('delete_ts', models.DateTimeField(null=True)),
                ('maked_passive_ts', models.DateTimeField(null=True)),
                ('maked_active_ts', models.DateTimeField(null=True)),
                ('name', models.CharField(max_length=25, null=True)),
                ('is_student', models.NullBooleanField()),
                ('is_parent', models.NullBooleanField()),
                ('is_other', models.NullBooleanField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_passive', models.NullBooleanField()),
                ('is_deleted', models.NullBooleanField()),
                ('create_ts', models.DateTimeField(null=True)),
                ('update_ts', models.DateTimeField(null=True)),
                ('delete_ts', models.DateTimeField(null=True)),
                ('maked_passive_ts', models.DateTimeField(null=True)),
                ('maked_active_ts', models.DateTimeField(null=True)),
                ('issue_date', models.DateField(null=True)),
                ('due_date', models.DateField(null=True)),
                ('amount', models.FloatField(null=True)),
                ('is_tax_included', models.NullBooleanField()),
                ('is_invoiced', models.NullBooleanField()),
                ('is_clear', models.NullBooleanField()),
                ('is_canceled', models.NullBooleanField()),
                ('dealer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Dealer')),
                ('file', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.File')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_passive', models.NullBooleanField()),
                ('is_deleted', models.NullBooleanField()),
                ('create_ts', models.DateTimeField(null=True)),
                ('update_ts', models.DateTimeField(null=True)),
                ('delete_ts', models.DateTimeField(null=True)),
                ('maked_passive_ts', models.DateTimeField(null=True)),
                ('maked_active_ts', models.DateTimeField(null=True)),
                ('name', models.CharField(max_length=55, null=True)),
                ('surname', models.CharField(max_length=55, null=True)),
                ('tc_id', models.CharField(max_length=11, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PhoneNumber',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_passive', models.NullBooleanField()),
                ('is_deleted', models.NullBooleanField()),
                ('create_ts', models.DateTimeField(null=True)),
                ('update_ts', models.DateTimeField(null=True)),
                ('delete_ts', models.DateTimeField(null=True)),
                ('maked_passive_ts', models.DateTimeField(null=True)),
                ('maked_active_ts', models.DateTimeField(null=True)),
                ('number', models.CharField(max_length=10, null=True)),
                ('isDefault', models.NullBooleanField()),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Person')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PhoneNumberType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_passive', models.NullBooleanField()),
                ('is_deleted', models.NullBooleanField()),
                ('create_ts', models.DateTimeField(null=True)),
                ('update_ts', models.DateTimeField(null=True)),
                ('delete_ts', models.DateTimeField(null=True)),
                ('maked_passive_ts', models.DateTimeField(null=True)),
                ('maked_active_ts', models.DateTimeField(null=True)),
                ('name', models.CharField(max_length=16, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ProgressReview',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_passive', models.NullBooleanField()),
                ('is_deleted', models.NullBooleanField()),
                ('create_ts', models.DateTimeField(null=True)),
                ('update_ts', models.DateTimeField(null=True)),
                ('delete_ts', models.DateTimeField(null=True)),
                ('maked_passive_ts', models.DateTimeField(null=True)),
                ('maked_active_ts', models.DateTimeField(null=True)),
                ('begin', models.DateField(null=True)),
                ('end', models.DateField(null=True)),
                ('point', models.IntegerField(null=True)),
                ('comment', models.TextField(null=True)),
                ('comment_for_parent', models.TextField(null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PTASchedule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_passive', models.NullBooleanField()),
                ('is_deleted', models.NullBooleanField()),
                ('create_ts', models.DateTimeField(null=True)),
                ('update_ts', models.DateTimeField(null=True)),
                ('delete_ts', models.DateTimeField(null=True)),
                ('maked_passive_ts', models.DateTimeField(null=True)),
                ('maked_active_ts', models.DateTimeField(null=True)),
                ('date', models.DateField(null=True)),
                ('begin_time', models.TimeField(null=True)),
                ('end_time', models.TimeField(null=True)),
                ('is_happened', models.NullBooleanField()),
                ('comment', models.TextField(null=True)),
                ('parent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.ParentStudent')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SchoolExam',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_passive', models.NullBooleanField()),
                ('is_deleted', models.NullBooleanField()),
                ('create_ts', models.DateTimeField(null=True)),
                ('update_ts', models.DateTimeField(null=True)),
                ('delete_ts', models.DateTimeField(null=True)),
                ('maked_passive_ts', models.DateTimeField(null=True)),
                ('maked_active_ts', models.DateTimeField(null=True)),
                ('total_questions', models.IntegerField(null=True)),
                ('correct_answers', models.IntegerField(null=True)),
                ('wrong_answers', models.IntegerField(null=True)),
                ('review_point', models.IntegerField(null=True)),
                ('student_comment', models.TextField(null=True)),
                ('date', models.DateField(null=True)),
                ('lesson', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Lesson')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SharedFile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_passive', models.NullBooleanField()),
                ('is_deleted', models.NullBooleanField()),
                ('create_ts', models.DateTimeField(null=True)),
                ('update_ts', models.DateTimeField(null=True)),
                ('delete_ts', models.DateTimeField(null=True)),
                ('maked_passive_ts', models.DateTimeField(null=True)),
                ('maked_active_ts', models.DateTimeField(null=True)),
                ('is_expire', models.NullBooleanField()),
                ('expire_time', models.DateTimeField(null=True)),
                ('file', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.File')),
                ('shared_with', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Person')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_passive', models.NullBooleanField()),
                ('is_deleted', models.NullBooleanField()),
                ('create_ts', models.DateTimeField(null=True)),
                ('update_ts', models.DateTimeField(null=True)),
                ('delete_ts', models.DateTimeField(null=True)),
                ('maked_passive_ts', models.DateTimeField(null=True)),
                ('maked_active_ts', models.DateTimeField(null=True)),
                ('mother_name_surname', models.CharField(max_length=25)),
                ('father_name_surname', models.CharField(max_length=25)),
                ('divorced_parent', models.NullBooleanField()),
                ('orphan_father', models.NullBooleanField()),
                ('orphan_mother', models.NullBooleanField()),
                ('step_mother', models.NullBooleanField()),
                ('step_father', models.NullBooleanField()),
                ('sisters', models.IntegerField(null=True)),
                ('brothers', models.IntegerField(null=True)),
                ('elder_sisters', models.IntegerField(null=True)),
                ('elder_brothers', models.IntegerField(null=True)),
                ('step_sisters', models.IntegerField(null=True)),
                ('step_brothers', models.IntegerField(null=True)),
                ('step_elder_sisters', models.IntegerField(null=True)),
                ('step_elder_brothers', models.IntegerField(null=True)),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Person')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Student_BE_Info',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_passive', models.NullBooleanField()),
                ('is_deleted', models.NullBooleanField()),
                ('create_ts', models.DateTimeField(null=True)),
                ('update_ts', models.DateTimeField(null=True)),
                ('delete_ts', models.DateTimeField(null=True)),
                ('maked_passive_ts', models.DateTimeField(null=True)),
                ('maked_active_ts', models.DateTimeField(null=True)),
                ('will_take', models.NullBooleanField()),
                ('have_taked', models.NullBooleanField()),
                ('exit_earlier', models.NullBooleanField()),
                ('teacher_comment', models.TextField(null=True)),
                ('student_comment', models.TextField(null=True)),
                ('exam', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.BigExam')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Student_BE_Result',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_passive', models.NullBooleanField()),
                ('is_deleted', models.NullBooleanField()),
                ('create_ts', models.DateTimeField(null=True)),
                ('update_ts', models.DateTimeField(null=True)),
                ('delete_ts', models.DateTimeField(null=True)),
                ('maked_passive_ts', models.DateTimeField(null=True)),
                ('maked_active_ts', models.DateTimeField(null=True)),
                ('correct_answers', models.IntegerField(null=True)),
                ('wrong_answers', models.IntegerField(null=True)),
                ('teacher_comment', models.TextField(null=True)),
                ('student_comment', models.TextField(null=True)),
                ('lesson', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.BE_Lesson')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Student_BESE_Info',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_passive', models.NullBooleanField()),
                ('is_deleted', models.NullBooleanField()),
                ('create_ts', models.DateTimeField(null=True)),
                ('update_ts', models.DateTimeField(null=True)),
                ('delete_ts', models.DateTimeField(null=True)),
                ('maked_passive_ts', models.DateTimeField(null=True)),
                ('maked_active_ts', models.DateTimeField(null=True)),
                ('will_take', models.NullBooleanField()),
                ('have_taked', models.NullBooleanField()),
                ('exit_earlier', models.NullBooleanField()),
                ('teacher_comment', models.TextField(null=True)),
                ('student_comment', models.TextField(null=True)),
                ('exam', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.BE_SubExam')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='StudentFile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_passive', models.NullBooleanField()),
                ('is_deleted', models.NullBooleanField()),
                ('create_ts', models.DateTimeField(null=True)),
                ('update_ts', models.DateTimeField(null=True)),
                ('delete_ts', models.DateTimeField(null=True)),
                ('maked_passive_ts', models.DateTimeField(null=True)),
                ('maked_active_ts', models.DateTimeField(null=True)),
                ('file', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.File')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Student')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='StudentLesson',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_passive', models.NullBooleanField()),
                ('is_deleted', models.NullBooleanField()),
                ('create_ts', models.DateTimeField(null=True)),
                ('update_ts', models.DateTimeField(null=True)),
                ('delete_ts', models.DateTimeField(null=True)),
                ('maked_passive_ts', models.DateTimeField(null=True)),
                ('maked_active_ts', models.DateTimeField(null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='StudentTeacherReview',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_passive', models.NullBooleanField()),
                ('is_deleted', models.NullBooleanField()),
                ('create_ts', models.DateTimeField(null=True)),
                ('update_ts', models.DateTimeField(null=True)),
                ('delete_ts', models.DateTimeField(null=True)),
                ('maked_passive_ts', models.DateTimeField(null=True)),
                ('maked_active_ts', models.DateTimeField(null=True)),
                ('stars', models.IntegerField(null=True)),
                ('comment', models.TextField(null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_passive', models.NullBooleanField()),
                ('is_deleted', models.NullBooleanField()),
                ('create_ts', models.DateTimeField(null=True)),
                ('update_ts', models.DateTimeField(null=True)),
                ('delete_ts', models.DateTimeField(null=True)),
                ('maked_passive_ts', models.DateTimeField(null=True)),
                ('maked_active_ts', models.DateTimeField(null=True)),
                ('name', models.CharField(max_length=55, null=True)),
                ('lesson', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Lesson')),
                ('section', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.EducationSection')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SubTerm',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_passive', models.NullBooleanField()),
                ('is_deleted', models.NullBooleanField()),
                ('create_ts', models.DateTimeField(null=True)),
                ('update_ts', models.DateTimeField(null=True)),
                ('delete_ts', models.DateTimeField(null=True)),
                ('maked_passive_ts', models.DateTimeField(null=True)),
                ('maked_active_ts', models.DateTimeField(null=True)),
                ('name', models.CharField(max_length=25, null=True)),
                ('end', models.DateField(null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TaxType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_passive', models.NullBooleanField()),
                ('is_deleted', models.NullBooleanField()),
                ('create_ts', models.DateTimeField(null=True)),
                ('update_ts', models.DateTimeField(null=True)),
                ('delete_ts', models.DateTimeField(null=True)),
                ('maked_passive_ts', models.DateTimeField(null=True)),
                ('maked_active_ts', models.DateTimeField(null=True)),
                ('name', models.CharField(max_length=25, null=True)),
                ('rate', models.FloatField(null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Teacher',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_passive', models.NullBooleanField()),
                ('is_deleted', models.NullBooleanField()),
                ('create_ts', models.DateTimeField(null=True)),
                ('update_ts', models.DateTimeField(null=True)),
                ('delete_ts', models.DateTimeField(null=True)),
                ('maked_passive_ts', models.DateTimeField(null=True)),
                ('maked_active_ts', models.DateTimeField(null=True)),
                ('is_taxpayer', models.NullBooleanField()),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Person')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TeacherExam',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_passive', models.NullBooleanField()),
                ('is_deleted', models.NullBooleanField()),
                ('create_ts', models.DateTimeField(null=True)),
                ('update_ts', models.DateTimeField(null=True)),
                ('delete_ts', models.DateTimeField(null=True)),
                ('maked_passive_ts', models.DateTimeField(null=True)),
                ('maked_active_ts', models.DateTimeField(null=True)),
                ('total_questions', models.IntegerField(null=True)),
                ('correct_answers', models.IntegerField(null=True)),
                ('wrong_answers', models.IntegerField(null=True)),
                ('review_point', models.IntegerField(null=True)),
                ('student_comment', models.TextField(null=True)),
                ('comment', models.TextField(null=True)),
                ('review_comment', models.TextField(null=True)),
                ('comment_for_parent', models.TextField(null=True)),
                ('begin', models.DateTimeField(null=True)),
                ('end', models.DateTimeField(null=True)),
                ('lesson', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.StudentLesson')),
                ('type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.ExamType')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TeacherExamSubject',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_passive', models.NullBooleanField()),
                ('is_deleted', models.NullBooleanField()),
                ('create_ts', models.DateTimeField(null=True)),
                ('update_ts', models.DateTimeField(null=True)),
                ('delete_ts', models.DateTimeField(null=True)),
                ('maked_passive_ts', models.DateTimeField(null=True)),
                ('maked_active_ts', models.DateTimeField(null=True)),
                ('comment', models.TextField(null=True)),
                ('exam', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.TeacherExam')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Subject')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TeacherFile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_passive', models.NullBooleanField()),
                ('is_deleted', models.NullBooleanField()),
                ('create_ts', models.DateTimeField(null=True)),
                ('update_ts', models.DateTimeField(null=True)),
                ('delete_ts', models.DateTimeField(null=True)),
                ('maked_passive_ts', models.DateTimeField(null=True)),
                ('maked_active_ts', models.DateTimeField(null=True)),
                ('file', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.File')),
                ('type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.OtomationFileType')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TeacherFileType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_passive', models.NullBooleanField()),
                ('is_deleted', models.NullBooleanField()),
                ('create_ts', models.DateTimeField(null=True)),
                ('update_ts', models.DateTimeField(null=True)),
                ('delete_ts', models.DateTimeField(null=True)),
                ('maked_passive_ts', models.DateTimeField(null=True)),
                ('maked_active_ts', models.DateTimeField(null=True)),
                ('name', models.CharField(max_length=25, null=True)),
                ('teacher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Teacher')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Term',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_passive', models.NullBooleanField()),
                ('is_deleted', models.NullBooleanField()),
                ('create_ts', models.DateTimeField(null=True)),
                ('update_ts', models.DateTimeField(null=True)),
                ('delete_ts', models.DateTimeField(null=True)),
                ('maked_passive_ts', models.DateTimeField(null=True)),
                ('maked_active_ts', models.DateTimeField(null=True)),
                ('begin', models.DateField(null=True)),
                ('end', models.DateField(null=True)),
                ('isCurrent', models.NullBooleanField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Term_TTL',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_passive', models.NullBooleanField()),
                ('is_deleted', models.NullBooleanField()),
                ('create_ts', models.DateTimeField(null=True)),
                ('update_ts', models.DateTimeField(null=True)),
                ('delete_ts', models.DateTimeField(null=True)),
                ('maked_passive_ts', models.DateTimeField(null=True)),
                ('maked_active_ts', models.DateTimeField(null=True)),
                ('term', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Term')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TermStudent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_passive', models.NullBooleanField()),
                ('is_deleted', models.NullBooleanField()),
                ('create_ts', models.DateTimeField(null=True)),
                ('update_ts', models.DateTimeField(null=True)),
                ('delete_ts', models.DateTimeField(null=True)),
                ('maked_passive_ts', models.DateTimeField(null=True)),
                ('maked_active_ts', models.DateTimeField(null=True)),
                ('school', models.CharField(max_length=60)),
                ('school_level', models.IntegerField(null=True)),
                ('school_section', models.CharField(max_length=1)),
                ('section', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.EducationSection')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Student')),
                ('teacher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Teacher')),
                ('term', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Term')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_passive', models.NullBooleanField()),
                ('is_deleted', models.NullBooleanField()),
                ('create_ts', models.DateTimeField(null=True)),
                ('update_ts', models.DateTimeField(null=True)),
                ('delete_ts', models.DateTimeField(null=True)),
                ('maked_passive_ts', models.DateTimeField(null=True)),
                ('maked_active_ts', models.DateTimeField(null=True)),
                ('date', models.DateField(null=True)),
                ('amount', models.FloatField(null=True)),
                ('commission', models.FloatField(null=True)),
                ('tax', models.FloatField(null=True)),
                ('file', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.File')),
                ('payer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Payer')),
                ('payment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Payment')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TransactionType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_passive', models.NullBooleanField()),
                ('is_deleted', models.NullBooleanField()),
                ('create_ts', models.DateTimeField(null=True)),
                ('update_ts', models.DateTimeField(null=True)),
                ('delete_ts', models.DateTimeField(null=True)),
                ('maked_passive_ts', models.DateTimeField(null=True)),
                ('maked_active_ts', models.DateTimeField(null=True)),
                ('name', models.CharField(max_length=25, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TTL',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_passive', models.NullBooleanField()),
                ('is_deleted', models.NullBooleanField()),
                ('create_ts', models.DateTimeField(null=True)),
                ('update_ts', models.DateTimeField(null=True)),
                ('delete_ts', models.DateTimeField(null=True)),
                ('maked_passive_ts', models.DateTimeField(null=True)),
                ('maked_active_ts', models.DateTimeField(null=True)),
                ('lesson', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Lesson')),
                ('teacher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Teacher')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UniqueObject',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_passive', models.NullBooleanField()),
                ('is_deleted', models.NullBooleanField()),
                ('create_ts', models.DateTimeField(null=True)),
                ('update_ts', models.DateTimeField(null=True)),
                ('delete_ts', models.DateTimeField(null=True)),
                ('maked_passive_ts', models.DateTimeField(null=True)),
                ('maked_active_ts', models.DateTimeField(null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UniqueObjectHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_passive', models.NullBooleanField()),
                ('is_deleted', models.NullBooleanField()),
                ('create_ts', models.DateTimeField(null=True)),
                ('update_ts', models.DateTimeField(null=True)),
                ('delete_ts', models.DateTimeField(null=True)),
                ('maked_passive_ts', models.DateTimeField(null=True)),
                ('maked_active_ts', models.DateTimeField(null=True)),
                ('time', models.DateTimeField(null=True)),
                ('old_value', models.TextField(null=True)),
                ('new_value', models.TextField(null=True)),
                ('event_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.ObjectEvent')),
                ('unique_object', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.UniqueObject')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UniqueObjectType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_passive', models.NullBooleanField()),
                ('is_deleted', models.NullBooleanField()),
                ('create_ts', models.DateTimeField(null=True)),
                ('update_ts', models.DateTimeField(null=True)),
                ('delete_ts', models.DateTimeField(null=True)),
                ('maked_passive_ts', models.DateTimeField(null=True)),
                ('maked_active_ts', models.DateTimeField(null=True)),
                ('name', models.CharField(max_length=55, null=True)),
                ('description', models.CharField(max_length=255, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='uniqueobject',
            name='type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.UniqueObjectType'),
        ),
        migrations.AddField(
            model_name='ttl',
            name='unique_object',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.UniqueObject'),
        ),
        migrations.AddField(
            model_name='transactiontype',
            name='unique_object',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.UniqueObject'),
        ),
        migrations.AddField(
            model_name='transaction',
            name='type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.TransactionType'),
        ),
        migrations.AddField(
            model_name='transaction',
            name='unique_object',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.UniqueObject'),
        ),
        migrations.AddField(
            model_name='termstudent',
            name='unique_object',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.UniqueObject'),
        ),
        migrations.AddField(
            model_name='term_ttl',
            name='ttl',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.TTL'),
        ),
        migrations.AddField(
            model_name='term_ttl',
            name='unique_object',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.UniqueObject'),
        ),
        migrations.AddField(
            model_name='term',
            name='unique_object',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.UniqueObject'),
        ),
        migrations.AddField(
            model_name='teacherfiletype',
            name='unique_object',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.UniqueObject'),
        ),
        migrations.AddField(
            model_name='teacherfile',
            name='unique_object',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.UniqueObject'),
        ),
        migrations.AddField(
            model_name='teacherexamsubject',
            name='unique_object',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.UniqueObject'),
        ),
        migrations.AddField(
            model_name='teacherexam',
            name='unique_object',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.UniqueObject'),
        ),
        migrations.AddField(
            model_name='teacher',
            name='unique_object',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.UniqueObject'),
        ),
        migrations.AddField(
            model_name='taxtype',
            name='unique_object',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.UniqueObject'),
        ),
        migrations.AddField(
            model_name='subterm',
            name='term',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Term'),
        ),
        migrations.AddField(
            model_name='subterm',
            name='unique_object',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.UniqueObject'),
        ),
        migrations.AddField(
            model_name='subject',
            name='unique_object',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.UniqueObject'),
        ),
        migrations.AddField(
            model_name='studentteacherreview',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.TermStudent'),
        ),
        migrations.AddField(
            model_name='studentteacherreview',
            name='teacher',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Teacher'),
        ),
        migrations.AddField(
            model_name='studentteacherreview',
            name='unique_object',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.UniqueObject'),
        ),
        migrations.AddField(
            model_name='studentlesson',
            name='lesson',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Term_TTL'),
        ),
        migrations.AddField(
            model_name='studentlesson',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.TermStudent'),
        ),
        migrations.AddField(
            model_name='studentlesson',
            name='unique_object',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.UniqueObject'),
        ),
        migrations.AddField(
            model_name='studentfile',
            name='unique_object',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.UniqueObject'),
        ),
        migrations.AddField(
            model_name='student_bese_info',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.TermStudent'),
        ),
        migrations.AddField(
            model_name='student_bese_info',
            name='unique_object',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.UniqueObject'),
        ),
        migrations.AddField(
            model_name='student_be_result',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.TermStudent'),
        ),
        migrations.AddField(
            model_name='student_be_result',
            name='unique_object',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.UniqueObject'),
        ),
        migrations.AddField(
            model_name='student_be_info',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.TermStudent'),
        ),
        migrations.AddField(
            model_name='student_be_info',
            name='unique_object',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.UniqueObject'),
        ),
        migrations.AddField(
            model_name='student',
            name='unique_object',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.UniqueObject'),
        ),
        migrations.AddField(
            model_name='sharedfile',
            name='unique_object',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.UniqueObject'),
        ),
        migrations.AddField(
            model_name='schoolexam',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.TermStudent'),
        ),
        migrations.AddField(
            model_name='schoolexam',
            name='type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.ExamType'),
        ),
        migrations.AddField(
            model_name='schoolexam',
            name='unique_object',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.UniqueObject'),
        ),
        migrations.AddField(
            model_name='ptaschedule',
            name='teacher',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Teacher'),
        ),
        migrations.AddField(
            model_name='ptaschedule',
            name='unique_object',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.UniqueObject'),
        ),
        migrations.AddField(
            model_name='progressreview',
            name='lesson',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.StudentLesson'),
        ),
        migrations.AddField(
            model_name='progressreview',
            name='unique_object',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.UniqueObject'),
        ),
        migrations.AddField(
            model_name='phonenumbertype',
            name='unique_object',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.UniqueObject'),
        ),
        migrations.AddField(
            model_name='phonenumber',
            name='type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.PhoneNumberType'),
        ),
        migrations.AddField(
            model_name='phonenumber',
            name='unique_object',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.UniqueObject'),
        ),
        migrations.AddField(
            model_name='person',
            name='unique_object',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.UniqueObject'),
        ),
        migrations.AddField(
            model_name='person',
            name='user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='payment',
            name='lesson',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.StudentLesson'),
        ),
        migrations.AddField(
            model_name='payment',
            name='tax_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.TaxType'),
        ),
        migrations.AddField(
            model_name='payment',
            name='unique_object',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.UniqueObject'),
        ),
        migrations.AddField(
            model_name='payer',
            name='unique_object',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.UniqueObject'),
        ),
        migrations.AddField(
            model_name='parenttype',
            name='unique_object',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.UniqueObject'),
        ),
        migrations.AddField(
            model_name='parentteacherreview',
            name='teacher',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Teacher'),
        ),
        migrations.AddField(
            model_name='parentteacherreview',
            name='unique_object',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.UniqueObject'),
        ),
        migrations.AddField(
            model_name='parentstudent',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.TermStudent'),
        ),
        migrations.AddField(
            model_name='parentstudent',
            name='type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.ParentType'),
        ),
        migrations.AddField(
            model_name='parentstudent',
            name='unique_object',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.UniqueObject'),
        ),
        migrations.AddField(
            model_name='parentfile',
            name='unique_object',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.UniqueObject'),
        ),
        migrations.AddField(
            model_name='parent',
            name='person',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Person'),
        ),
        migrations.AddField(
            model_name='parent',
            name='teacher',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Teacher'),
        ),
        migrations.AddField(
            model_name='parent',
            name='unique_object',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.UniqueObject'),
        ),
        migrations.AddField(
            model_name='otomationfiletype',
            name='unique_object',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.UniqueObject'),
        ),
        migrations.AddField(
            model_name='otomationfile',
            name='type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.OtomationFileType'),
        ),
        migrations.AddField(
            model_name='otomationfile',
            name='unique_object',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.UniqueObject'),
        ),
        migrations.AddField(
            model_name='otherexam',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.TermStudent'),
        ),
        migrations.AddField(
            model_name='otherexam',
            name='type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.ExamType'),
        ),
        migrations.AddField(
            model_name='otherexam',
            name='unique_object',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.UniqueObject'),
        ),
        migrations.AddField(
            model_name='messageattachment',
            name='unique_object',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.UniqueObject'),
        ),
        migrations.AddField(
            model_name='message',
            name='receiver',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='receiver_person_for_message', to='core.Person'),
        ),
        migrations.AddField(
            model_name='message',
            name='sender',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='send_person_for_message', to='core.Person'),
        ),
        migrations.AddField(
            model_name='message',
            name='unique_object',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.UniqueObject'),
        ),
        migrations.AddField(
            model_name='lesson',
            name='unique_object',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.UniqueObject'),
        ),
        migrations.AddField(
            model_name='lecturerepetitive',
            name='lesson',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.StudentLesson'),
        ),
        migrations.AddField(
            model_name='lecturerepetitive',
            name='unique_object',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.UniqueObject'),
        ),
        migrations.AddField(
            model_name='lecture',
            name='lesson',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.StudentLesson'),
        ),
        migrations.AddField(
            model_name='lecture',
            name='repetitive',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='core.LectureRepetitive'),
        ),
        migrations.AddField(
            model_name='lecture',
            name='unique_object',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.UniqueObject'),
        ),
        migrations.AddField(
            model_name='homeworktype',
            name='teacher',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Teacher'),
        ),
        migrations.AddField(
            model_name='homeworktype',
            name='unique_object',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.UniqueObject'),
        ),
        migrations.AddField(
            model_name='homeworkfile',
            name='unique_object',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.UniqueObject'),
        ),
        migrations.AddField(
            model_name='homework',
            name='lecture',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Lecture'),
        ),
        migrations.AddField(
            model_name='homework',
            name='type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.HomeWorkType'),
        ),
        migrations.AddField(
            model_name='homework',
            name='unique_object',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.UniqueObject'),
        ),
        migrations.AddField(
            model_name='file',
            name='unique_object',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.UniqueObject'),
        ),
        migrations.AddField(
            model_name='examtype',
            name='unique_object',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.UniqueObject'),
        ),
        migrations.AddField(
            model_name='examinstitution',
            name='unique_object',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.UniqueObject'),
        ),
        migrations.AddField(
            model_name='educationsection',
            name='unique_object',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.UniqueObject'),
        ),
        migrations.AddField(
            model_name='educationlevel',
            name='unique_object',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.UniqueObject'),
        ),
        migrations.AddField(
            model_name='district',
            name='unique_object',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.UniqueObject'),
        ),
        migrations.AddField(
            model_name='dealer',
            name='tax_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.TaxType'),
        ),
        migrations.AddField(
            model_name='dealer',
            name='teacher',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Teacher'),
        ),
        migrations.AddField(
            model_name='dealer',
            name='unique_object',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.UniqueObject'),
        ),
        migrations.AddField(
            model_name='city',
            name='unique_object',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.UniqueObject'),
        ),
        migrations.AddField(
            model_name='bigexamtype',
            name='education_level',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.EducationSection'),
        ),
        migrations.AddField(
            model_name='bigexamtype',
            name='institution',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.ExamInstitution'),
        ),
        migrations.AddField(
            model_name='bigexamtype',
            name='unique_object',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.UniqueObject'),
        ),
        migrations.AddField(
            model_name='bigexam',
            name='term',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Term'),
        ),
        migrations.AddField(
            model_name='bigexam',
            name='type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.BigExamType'),
        ),
        migrations.AddField(
            model_name='bigexam',
            name='unique_object',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.UniqueObject'),
        ),
        migrations.AddField(
            model_name='bese_lesson',
            name='unique_object',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.UniqueObject'),
        ),
        migrations.AddField(
            model_name='be_subexam',
            name='exam',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.BigExam'),
        ),
        migrations.AddField(
            model_name='be_subexam',
            name='unique_object',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.UniqueObject'),
        ),
        migrations.AddField(
            model_name='be_lesson',
            name='exam',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.BigExam'),
        ),
        migrations.AddField(
            model_name='be_lesson',
            name='lesson',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Lesson'),
        ),
        migrations.AddField(
            model_name='be_lesson',
            name='unique_object',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.UniqueObject'),
        ),
        migrations.AddField(
            model_name='articleunlike',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Student'),
        ),
        migrations.AddField(
            model_name='articleunlike',
            name='unique_object',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.UniqueObject'),
        ),
        migrations.AddField(
            model_name='articlestar',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Student'),
        ),
        migrations.AddField(
            model_name='articlestar',
            name='unique_object',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.UniqueObject'),
        ),
        migrations.AddField(
            model_name='articlelike',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Student'),
        ),
        migrations.AddField(
            model_name='articlelike',
            name='unique_object',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.UniqueObject'),
        ),
        migrations.AddField(
            model_name='articlecomment',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Student'),
        ),
        migrations.AddField(
            model_name='articlecomment',
            name='unique_object',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.UniqueObject'),
        ),
        migrations.AddField(
            model_name='article',
            name='lesson',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.TTL'),
        ),
        migrations.AddField(
            model_name='article',
            name='unique_object',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.UniqueObject'),
        ),
        migrations.AddField(
            model_name='addresstype',
            name='unique_object',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.UniqueObject'),
        ),
        migrations.AddField(
            model_name='address',
            name='district',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.District'),
        ),
        migrations.AddField(
            model_name='address',
            name='person',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Person'),
        ),
        migrations.AddField(
            model_name='address',
            name='type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.AddressType'),
        ),
        migrations.AddField(
            model_name='address',
            name='unique_object',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.UniqueObject'),
        ),
    ]
